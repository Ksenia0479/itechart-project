{"ast":null,"code":"import _classCallCheck from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kseniachervonaya/Desktop/itechart-project-1/src/Searcher.js\";\nimport React from 'react';\n\nvar Searcher =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searcher, _React$Component);\n\n  function Searcher() {\n    _classCallCheck(this, Searcher);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Searcher).apply(this, arguments));\n  }\n\n  _createClass(Searcher, [{\n    key: \"renderBySearch\",\n    value: function renderBySearch() {\n      var _this = this;\n\n      var searchedData = document.getElementById(\"searchTerm\").value.toLowerCase();\n      var companyData = this.props.data.companyData.slice();\n      var dividedCompanyData = this.gatherSearchedInfo(companyData);\n      var identifiedCompanyData = this.identifyCompanyData(dividedCompanyData, searchedData);\n      var finalCompanyData = this.gatherfinalCompanyData(identifiedCompanyData, companyData);\n      this.setState({\n        changedInfoBySearch: finalCompanyData,\n        options: {\n          changedInfoBySearch: true,\n          changedInfoByCost: false,\n          changedInfoByPopularity: false,\n          changedInfoByRate: false\n        }\n      }, function () {\n        _this.props.updateState(_this.state);\n      });\n    }\n  }, {\n    key: \"gatherSearchedInfo\",\n    value: function gatherSearchedInfo(companyData) {\n      var splitedInfo;\n      var gatheredSeachedInfo = [];\n      companyData.forEach(function (company) {\n        var searchedInfo = {};\n\n        for (var companyInfo in company) {\n          if (companyInfo === \"companyName\" || companyInfo === \"serviceType\") {\n            splitedInfo = company[companyInfo].split(\" \");\n\n            if (!(companyInfo in searchedInfo)) {\n              searchedInfo[companyInfo] = splitedInfo;\n              splitedInfo.forEach(function (value, index) {\n                splitedInfo[index] = value.toLowerCase();\n              });\n              searchedInfo[companyInfo].push(company[companyInfo].toLowerCase());\n            }\n          }\n        }\n\n        gatheredSeachedInfo.push(searchedInfo);\n      });\n      return gatheredSeachedInfo;\n    }\n  }, {\n    key: \"identifyCompanyData\",\n    value: function identifyCompanyData(dividedCompanyData, searchedData) {\n      var identifiedCompanyData = [];\n      dividedCompanyData.forEach(function (companyInfo) {\n        var searchedInfo = {};\n\n        var _loop = function _loop(companyInfoProp) {\n          companyInfo[companyInfoProp].forEach(function (searchedText) {\n            if (searchedData && !(companyInfoProp in searchedInfo)) {\n              if (searchedData === searchedText.substring(0, searchedData.length)) {\n                searchedInfo[companyInfoProp] = companyInfo[companyInfoProp].slice(-1)[0]; // ???\n              }\n            }\n          });\n        };\n\n        for (var companyInfoProp in companyInfo) {\n          _loop(companyInfoProp);\n        }\n\n        if (!(Object.entries(searchedInfo).length === 0 && searchedInfo.constructor === Object)) {\n          identifiedCompanyData.push(searchedInfo);\n        }\n      });\n\n      if (!identifiedCompanyData.length) {\n        dividedCompanyData.forEach(function (companyInfo) {\n          var searchedInfo = {};\n\n          for (var companyInfoProp in companyInfo) {\n            searchedInfo[companyInfoProp] = companyInfo[companyInfoProp].slice(-1)[0]; // ???\n          }\n\n          identifiedCompanyData.push(searchedInfo);\n        });\n      }\n\n      return identifiedCompanyData;\n    }\n  }, {\n    key: \"gatherfinalCompanyData\",\n    value: function gatherfinalCompanyData(identifiedCompanyData, companyData) {\n      var finalCompanyData = [];\n      companyData.forEach(function (company) {\n        identifiedCompanyData.forEach(function (companyInfo, i) {\n          if (identifiedCompanyData[i] && Object.keys(companyInfo)[0] in company) {\n            if (companyInfo[Object.keys(companyInfo)[0]] === company[Object.keys(companyInfo)[0]].toLowerCase()) {\n              finalCompanyData.push(company);\n            }\n          }\n        });\n      });\n\n      if (!finalCompanyData.length) {\n        finalCompanyData = companyData[companyData.length - 1];\n      }\n\n      ;\n      return finalCompanyData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"searchTerm\",\n        id: \"searchTerm\",\n        placeholder: \"What are you looking for?\",\n        onChange: function onChange() {\n          _this2.renderBySearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"searchButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Searcher;\n}(React.Component);\n\nexport default Searcher;","map":{"version":3,"sources":["/Users/kseniachervonaya/Desktop/itechart-project-1/src/Searcher.js"],"names":["React","Searcher","searchedData","document","getElementById","value","toLowerCase","companyData","props","data","slice","dividedCompanyData","gatherSearchedInfo","identifiedCompanyData","identifyCompanyData","finalCompanyData","gatherfinalCompanyData","setState","changedInfoBySearch","options","changedInfoByCost","changedInfoByPopularity","changedInfoByRate","updateState","state","splitedInfo","gatheredSeachedInfo","forEach","company","searchedInfo","companyInfo","split","index","push","companyInfoProp","searchedText","substring","length","Object","entries","constructor","i","keys","renderBySearch","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Searcher extends React.Component {\n  renderBySearch() {\n    const searchedData = document.getElementById(\"searchTerm\").value.toLowerCase();\n\n    const companyData = this.props.data.companyData.slice();  \n    const dividedCompanyData = this.gatherSearchedInfo(companyData);\n\n    const identifiedCompanyData = this.identifyCompanyData(dividedCompanyData, searchedData);\n    const finalCompanyData = this.gatherfinalCompanyData(identifiedCompanyData, companyData);\n    \n    this.setState({\n      changedInfoBySearch: finalCompanyData,\n      options : { \n        changedInfoBySearch: true,\n        changedInfoByCost: false, \n        changedInfoByPopularity: false, \n        changedInfoByRate: false\n      }\n    }, () => {this.props.updateState(this.state)})\n  };\n\n  gatherSearchedInfo(companyData) { \n    let splitedInfo;\n    let gatheredSeachedInfo = [];\n\n    companyData.forEach((company) => {\n      let searchedInfo = {};\n\n      for (let companyInfo in company) {\n        if (companyInfo === \"companyName\" || companyInfo === \"serviceType\") {\n          splitedInfo = company[companyInfo].split(\" \"); \n          if (!(companyInfo in searchedInfo)) {  \n            searchedInfo[companyInfo] = splitedInfo;\n            splitedInfo.forEach((value, index) => {\n              splitedInfo[index] = value.toLowerCase();\n            })\n            searchedInfo[companyInfo].push(company[companyInfo].toLowerCase())\n          }\n        }\n      }\n      gatheredSeachedInfo.push(searchedInfo)\n    })\n    return gatheredSeachedInfo;\n  };\n\n  identifyCompanyData(dividedCompanyData, searchedData) { \n    let identifiedCompanyData = [];\n    \n    dividedCompanyData.forEach((companyInfo) => {\n      let searchedInfo = {};\n      for (let companyInfoProp in companyInfo) {\n        companyInfo[companyInfoProp].forEach((searchedText) => { \n          if (searchedData && !(companyInfoProp in searchedInfo)) {\n            if (searchedData === searchedText.substring(0, searchedData.length)) {             \n                searchedInfo[companyInfoProp] = companyInfo[companyInfoProp].slice(-1)[0]; // ???\n            }\n          }     \n        })\n      }\n      if (!(Object.entries(searchedInfo).length === 0 && searchedInfo.constructor === Object)) {\n        identifiedCompanyData.push(searchedInfo)\n      }\n    });\n\n    if (!identifiedCompanyData.length) {\n      dividedCompanyData.forEach((companyInfo) => {\n        let searchedInfo = {};\n        for (let companyInfoProp in companyInfo) {\n          searchedInfo[companyInfoProp] = companyInfo[companyInfoProp].slice(-1)[0]; // ???\n        }   \n        identifiedCompanyData.push(searchedInfo)\n      })\n    }\n\n    return identifiedCompanyData  \n  };\n\n  gatherfinalCompanyData(identifiedCompanyData, companyData) {\n   let finalCompanyData = [];\n   companyData.forEach((company) => {\n      identifiedCompanyData.forEach((companyInfo, i) => {\n        if (identifiedCompanyData[i] && Object.keys(companyInfo)[0] in company) {\n          if(companyInfo[Object.keys(companyInfo)[0]] === company[Object.keys(companyInfo)[0]].toLowerCase()) {\n            finalCompanyData.push(company);\n          }\n        }\n      })\n    })\n    if (!finalCompanyData.length) {\n      finalCompanyData = companyData[companyData.length - 1];\n    }; \n    return finalCompanyData;\n  }\n\n  render() {\n    return (\n      <div className =\"search\">\n        <input type=\"text\" className =\"searchTerm\" id = \"searchTerm\" placeholder=\"What are you looking for?\" onChange = {() => {this.renderBySearch()}}/>\n        <button type=\"submit\" className =\"searchButton\">\n          <i className =\"fas fa-search\"></i>\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Searcher;"]},"metadata":{},"sourceType":"module"}