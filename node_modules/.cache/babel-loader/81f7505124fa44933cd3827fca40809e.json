{"ast":null,"code":"import _defineProperty from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kseniachervonaya/Desktop/itechart-project-1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kseniachervonaya/Desktop/itechart-project-1/src/TableSorter.js\";\nimport React from \"react\";\n\nvar TableSorter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableSorter, _React$Component);\n\n  function TableSorter() {\n    _classCallCheck(this, TableSorter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableSorter).apply(this, arguments));\n  }\n\n  _createClass(TableSorter, [{\n    key: \"renderByCost\",\n    value: function renderByCost() {\n      var _this = this;\n\n      var minCost = document.getElementById(\"min-cost\").value;\n      var maxCost = document.getElementById(\"max-cost\").value;\n      var sortedInfo = [];\n      this.props.data.changedInfoBySearch.forEach(function (companyData) {\n        if (\"serviceCost\" in companyData) {\n          if (!maxCost) {\n            maxCost = companyData[\"serviceCost\"];\n          }\n\n          if (companyData[\"serviceCost\"] >= minCost && companyData[\"serviceCost\"] <= maxCost) {\n            sortedInfo.push(companyData);\n          }\n        }\n      });\n      this.setState({\n        changedInfoByCost: sortedInfo,\n        options: {\n          changedInfoByCost: true,\n          changedInfoBySearch: false,\n          changedInfoByRate: false,\n          changedInfoByPopularity: false\n        }\n      }, function () {\n        _this.props.updateState(_this.state);\n      });\n    }\n  }, {\n    key: \"renderByRate\",\n    value: function renderByRate(event, sortByParam) {\n      var _this$setState,\n          _this2 = this;\n\n      var companyData = this.props.data;\n      var changedData = event.target.name;\n\n      if (event.target.checked) {\n        for (var option in companyData.options) {\n          if (companyData.options[option]) {\n            var sortedData = companyData[option].slice();\n            companyData[changedData] = sortedData.sort(function (comparedCompany1, comparedCompany2) {\n              return comparedCompany2[sortByParam] - comparedCompany1[sortByParam];\n            });\n          }\n        }\n      } else {\n        for (var _option in companyData.options) {\n          if (companyData.options[_option]) {\n            var _sortedData = companyData[_option].slice();\n\n            companyData[changedData] = _sortedData.sort(function (comparedCompany1, comparedCompany2) {\n              return comparedCompany1.id - comparedCompany2.id;\n            });\n          }\n        }\n      }\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, changedData, companyData[changedData]), _defineProperty(_this$setState, \"options\", {\n        changedInfoBySearch: false,\n        changedInfoByRate: changedData === \"changedInfoByRate\" ? true : false,\n        changedInfoByPopularity: changedData === \"changedInfoByPopularity\" ? true : false,\n        changedInfoByCost: false\n      }), _this$setState), function () {\n        _this2.props.updateState(_this2.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"filter-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Sort by\"), React.createElement(\"label\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Popular\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"changedInfoByPopularity\",\n        onChange: function onChange(event) {\n          _this3.renderByRate(event, \"totallyBooked\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"High rate\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"changedInfoByRate\",\n        onChange: function onChange(event) {\n          _this3.renderByRate(event, \"rate\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"filter-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Cost\"), React.createElement(\"div\", {\n        className: \"cost-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Min\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"min-cost\",\n        placeholder: \"from\",\n        onChange: function onChange() {\n          _this3.renderByCost();\n        },\n        autoComplete: \"off\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Max\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"max-cost\",\n        placeholder: \"to\",\n        onChange: function onChange() {\n          _this3.renderByCost();\n        },\n        autoComplete: \"off\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TableSorter;\n}(React.Component);\n\nexport default TableSorter;","map":{"version":3,"sources":["/Users/kseniachervonaya/Desktop/itechart-project-1/src/TableSorter.js"],"names":["React","TableSorter","minCost","document","getElementById","value","maxCost","sortedInfo","props","data","changedInfoBySearch","forEach","companyData","push","setState","changedInfoByCost","options","changedInfoByRate","changedInfoByPopularity","updateState","state","event","sortByParam","changedData","target","name","checked","option","sortedData","slice","sort","comparedCompany1","comparedCompany2","id","renderByRate","renderByCost","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass TableSorter extends React.Component {\n  renderByCost() {\n    const minCost = document.getElementById(\"min-cost\").value;\n    let maxCost = document.getElementById(\"max-cost\").value;\n\n    let sortedInfo = [];\n    \n    this.props.data.changedInfoBySearch.forEach((companyData) => {\n      if (\"serviceCost\" in companyData) { \n        if (!maxCost) {\n          maxCost = companyData[\"serviceCost\"];\n        } \n        if (companyData[\"serviceCost\"] >= minCost && companyData[\"serviceCost\"] <= maxCost){\n          sortedInfo.push(companyData);\n        }\n      }\n    })\n\n    this.setState({ \n      changedInfoByCost: sortedInfo, \n      options: {\n        changedInfoByCost: true,\n        changedInfoBySearch: false, \n        changedInfoByRate: false,\n        changedInfoByPopularity: false\n      }\n    }, () => {this.props.updateState(this.state)})\n  }\n\n  renderByRate(event, sortByParam) {\n    const companyData = this.props.data;\n    const changedData = event.target.name;\n\n    if(event.target.checked) {\n      for (let option in companyData.options) {\n        if (companyData.options[option]) {\n          let sortedData = companyData[option].slice();\n          companyData[changedData] = sortedData.sort((comparedCompany1, comparedCompany2) => {\n            return comparedCompany2[sortByParam] - comparedCompany1[sortByParam]\n          })\n        }\n      }\n    }\n    else {\n      for (let option in companyData.options) {\n        if (companyData.options[option]) {\n          let sortedData = companyData[option].slice();\n          companyData[changedData] = sortedData.sort((comparedCompany1, comparedCompany2) => {\n            return comparedCompany1.id - comparedCompany2.id\n          })\n        }\n      }\n    }\n    \n    this.setState({ \n      [changedData]: companyData[changedData], \n      options: {\n        changedInfoBySearch: false,\n        changedInfoByRate: changedData === \"changedInfoByRate\" ? true : false,\n        changedInfoByPopularity: changedData === \"changedInfoByPopularity\" ? true : false,\n        changedInfoByCost: false\n      }\n    }, () => {this.props.updateState(this.state)})\n  }  \n\n  render() {\n    return (\n      <div className=\"filter-wrapper\">\n        <form>\n          <div className=\"filter-block\">\n            <h4>Sort by</h4>\n            <label className=\"container\">Popular\n              <input type=\"checkbox\" name = \"changedInfoByPopularity\" onChange = {(event) => {this.renderByRate(event, \"totallyBooked\")}}/>\n              <span className=\"checkmark\"></span>\n            </label>\n            <label className=\"container\">High rate\n              <input type=\"checkbox\" name = \"changedInfoByRate\" onChange = {(event) => {this.renderByRate(event, \"rate\")}}/>\n              <span className=\"checkmark\"></span>\n            </label> \n          </div>\n          <div className=\"filter-block\">\n            <h4>Cost</h4>\n            <div className=\"cost-container\">\n              <div>\n              <span>Min</span>\n                <input type=\"number\" id=\"min-cost\" placeholder=\"from\" onChange = {() => {this.renderByCost()}} autoComplete=\"off\" required/>\n              </div>\n              <div>\n              <span>Max</span>\n                <input type=\"number\" id=\"max-cost\" placeholder=\"to\" onChange = {() => {this.renderByCost()}} autoComplete=\"off\" required/>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div> \n    )\n  }\n}\n\nexport default TableSorter;"]},"metadata":{},"sourceType":"module"}